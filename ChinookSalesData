--Customers (full names, customer ID, and country) who are not in the US.

SELECT customerid, FirstName, LastName, country
FROM chinook.customers
WHERE country <>'USA';

--Customers from Brazil.

SELECT *
FROM chinook.customers
WHERE country ='Brazil';

--Invoices of customers who are from Brazil.

SELECT invoiceid, firstname, lastname, invoicedate, billingcountry 
FROM chinook.invoices
RIGHT JOIN customers 
ON invoices.CustomerId=customers.CustomerId
WHERE billingcountry='Brazil';

--Employees who are Sales Agents.

SELECT * FROM chinook.Employees
WHERE Title = "Sales Support Agent";

--Unique/distinct list of billing countries from the Invoice table.

SELECT distinct billingcountry FROM chinook.invoices;

--Invoices associated with each sales agent.

SELECT employees.FirstName, employees.LastName, invoices.InvoiceId
FROM employees
JOIN customers ON customers.SupportRepId=employees.EmployeeId
JOIN invoices ON invoices.CustomerId=customers.CustomerId;

-- Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT firstname, lastname, country, invoices.total, employees.FirstName as RepFirstName, employees.LastName as RepLastName
FROM chinook.customers
JOIN employees ON employees.EmployeeId=customers.SupportRepId
JOIN invoices ON invoices.CustomerId=customers.CustomerId;

--Number of invoices in 2009?

SELECT COUNT(*) FROM CHINOOK.invoices
WHERE invoicedate LIKE '2009%';

--Total sales for 2009.

SELECT SUM(Total) as TotalSales
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

--Purchased track name with each invoice line ID

SELECT invoice_items.InvoiceLineId, tracks.Name
FROM invoice_items
JOIN tracks 
ON tracks.TrackId=invoice_items.TrackId ORDER BY invoicelineid;

--Purchased track name AND artist name with each invoice line ID

SELECT invoice_items.InvoiceLineId, tracks.Name, artists.Name as Artist
FROM invoice_items
JOIN tracks ON invoice_items.TrackId=tracks.TrackId
JOIN albums ON albums.Albumid=tracks.AlbumId
JOIN artists ON artists.ArtistId=albums.ArtistId
ORDER BY invoicelineid;

--ALL tracks, Album name, Media type, and Genre.

SELECT t.name as TrackName, a.title as Album, m.name as MediaType, g.name as Genre
FROM tracks t
JOIN albums a ON a.albumid=t.albumid
JOIN media_types m ON m.mediatypeid=t.mediatypeid
JOIN genres g ON g.genreid=t.genreid;

--Total sales made by each sales agent.

SELECT e.firstname, e.lastname, ROUND(SUM(i.total),2) as TotalSales
FROM invoices i 
JOIN customers c ON i.customerid=c.CustomerId
JOIN employees e ON e.employeeid=c.supportrepid
GROUP BY c.supportrepid;

--Sales agent that made the most dollars in sales in 2009.

SELECT e.firstname, e.lastname, ROUND(SUM(i.total),2) as TotalSales
FROM invoices i 
JOIN customers c ON i.customerid=c.CustomerId
JOIN employees e ON e.employeeid=c.supportrepid
WHERE i.invoicedate LIKE '2009%' GROUP BY c.supportrepid
ORDER BY (round(sum(i.Total), 2))  DESC LIMIT 1;
